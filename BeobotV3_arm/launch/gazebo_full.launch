<?xml version="1.0"?>
<launch>
  <arg name="paused" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="world_name" default="worlds/empty.world"/>
  <arg name="urdf_path" default="$(find BeobotV3_arm)/urdf/BeobotV3_arm.urdf"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <!-- <arg name="verbose" value="true" /> -->
  </include>

  <!-- send robot urdf to param server -->
  <param name="robot_description" textfile="$(arg urdf_path)" />

  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -unpause -param robot_description -model robot -x 0 -y 0 -z 0.084"
    respawn="false" output="screen" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find BeobotV3_arm)/config/ros_controllers.yaml" command="load"/>

  <!-- Load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="mobile_base_controller arm_controller joint_state_controller"/>

  <!-- world->odom static transform -->
  <node pkg="tf" type="static_transform_publisher" name="world_odom" args="0 0 0.084 0 0 0 1 world odom 100" />

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
</launch>

